$font-family: 'Taviraj', 'Helvetica', 'sans-serif';

$font-family: 'Poppins', sans-serif;
$font-family2: 'Taviraj', serif;

$global-font-size: 100% !default;
$base-font-size: 16px;

$color-white: #ffffff;
$color-black: #000000;
$color-transparent: rgba($color-black, 0.0);

$color-header-bg: #A7FDE5;
$color-main-menu-bg: #011446;
$color-main-menu-hover: #B9FDE7;

$color-blue-def: #011446;

$color-aquamarine-light: #A7FDE5;

$color-hero-active: rgba($color-blue-def, 0.5);

$color-email-error: #f10000;
$color-email-success: #A7FDE5;

$color-btn-red: #e20000;

$color-hero-delay-line: #ff1100; 

/* font-weight
300 - Light
400 - Normal
500 - Medium
600 - Semi-bold
700 - Bold
*/

/* flexbox
flex: 0 0 100%;     // celý řádek
flex: 0 0 25%;     // procentuálně
flex: 1 1 0px;      // automatická šířka bloku - vyplní celý volný prostor
flex: 0 0 auto;     // shrink - jen tolik místa co potřebuje uvnitř obsah

(flex: flex-grow flex-shrink flex-basis)
*/

/*
// zalomeni itemu:
flex-wrap: nowrap | wrap | wrap-reverse;

// radky, sloupce 
flex-direction: row | row-reverse | column | column-reverse;

// horizontalni zarovnani:
justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly | start | end | left | right ... + safe | unsafe;

// vertikalni zarovnani:
align-items: stretch | flex-start | flex-end | center | baseline | first baseline | last baseline | start | end | self-start | self-end + ... safe | unsafe;
*/

/*
font-size: rem-calc(18);
font-weight: 400;
line-height: 1.3

@media (min-width: 640px) {

}

*/


@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

@function -zf-to-rem($value, $base: null) {
    // Check if the value is a number
    @if type-of($value) != 'number' {
      @warn inspect($value) + ' was passed to rem-calc(), which is not a number.';
      @return $value;
    }
  
    // Transform em into rem if someone hands over 'em's
    @if unit($value) == 'em' {
      $value: strip-unit($value) * 1rem;
    }
  
    // Calculate rem if units for $value is not rem or em
    @if unit($value) != 'rem' {
      $value: strip-unit($value) / strip-unit($base) * 1rem;
    }
  
    // Turn 0rem into 0
    @if $value == 0rem {
      $value: 0;
    }
  
    @return $value;
}


@function rem-calc($values, $base: null) {
    $rem-values: ();
    $count: length($values);
  
    // If no base is defined, defer to the global font size
    @if $base == null {
      $base: $global-font-size;
    }
  
    // If the base font size is a %, then multiply it by 16px
    // This is because 100% font size = 16px in most all browsers
    @if unit($base) == '%' {
      $base: ($base / 100%) * $base-font-size;
    }
  
    // Using rem as base allows correct scaling
    @if unit($base) == 'rem' {
      $base: strip-unit($base) * $base-font-size;
    }
  
    @if $count == 1 {
      @return -zf-to-rem($values, $base);
    }
  
    @for $i from 1 through $count {
      $rem-values: append($rem-values, -zf-to-rem(nth($values, $i), $base));
    }
  
    @return $rem-values;
}



